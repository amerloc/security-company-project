services:
  app:
    build:
      context: ./security-company  # Use the 'security-company' folder as the build context
      dockerfile: ../Dockerfile    # Dockerfile is outside the 'security-company' folder
    container_name: security_laravel_app
    restart: unless-stopped
    working_dir: /var/www/html/security-company
    volumes:
      - ./security-company:/var/www/html/security-company  # Mount the 'security-company' folder
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - '8000:8000'
    environment:
      APP_ENV: local
      APP_DEBUG: true
    networks:
      - laravel_network
    depends_on:
      - db
    command: php artisan serve --host=0.0.0.0 --port=8000

  db:
    image: mysql:8.0
    container_name: security_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootsecret
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - '3306:3306'
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:6.2-alpine
    container_name: security_redis
    restart: unless-stopped
    networks:
      - laravel_network
    volumes:
      - redisdata:/data
    ports:
      - '6379:6379'

networks:
  laravel_network:
    name: security-company-project_laravel_network
    driver: bridge

volumes:
  dbdata:
  redisdata:
